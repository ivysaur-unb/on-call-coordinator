// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERDiagram.png"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String?
  name         String?
  role         Role     @default(USER)
  teacher      Teacher?
}

enum Role {
  USER
  TEACHER
  SUPPLY
  ADMIN
  VICE_PRINCIPAL
}

model Teachable {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  // Many-to-many relation (verify this later)
  teacher Teacher[]
  Class   Class[]
}

model Teacher {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int         @unique
  initials  String
  absences  Absence[]
  school    School?     @relation(fields: [schoolId], references: [id])
  schoolId  Int?
  teachable Teachable[]
  schedule  Schedule?
}

model Absence {
  id        Int      @id @default(autoincrement())
  day       DateTime
  period    Int
  teacher   Teacher  @relation(fields: [teacherId], references: [id])
  teacherId Int
}

model School {
  id                 Int       @id @default(autoincrement())
  name               String    @unique
  address            String
  numberOfStudents   Int
  specialityPrograms String
  teacher            Teacher[]
}

model Schedule {
  id        Int              @id @default(autoincrement())
  teacher   Teacher          @relation(fields: [teacherId], references: [id])
  teacherId Int              @unique
  // school            School @relation 
  classes   ScheduledClass[]
}

model ScheduledClass {
  id          Int          @id @default(autoincrement())
  schedule    Schedule     @relation(fields: [scheduleId], references: [id])
  scheduleId  Int
  period      Int
  class       Class?       @relation(fields: [classId], references: [id])
  classId     Int?
  location    String?
  //Pseudo-restriction: special code is only non-null if class is null
  specialCode SpecialCode?
}

model Class {
  id             Int              @id @default(autoincrement())
  courseCode     String           @unique
  title          String
  grade          Grade
  pathway        Pathway?
  teachable      Teachable        @relation(fields: [teachableId], references: [id])
  teachableId    Int
  scheduledClass ScheduledClass[]
}

enum Pathway {
  COLLEGE_PREP
  OPEN
  WORK_PREP
  ACADEMIC
  APPLIED
  DE_STREAMED
}

enum Grade {
  NINE
  TEN
  ELEVEN
  TWELVE
  SECONDARY
  LEVEL_1
  LEVEL_2
  LEVEL_3
  LEVEL_4
  LEVEL_5
}

enum SpecialCode {
  MONITORING
  RESOURCE_ROOM
  LIBRARY
  CHAPLAINCY
  GUIDANCE
  STUDENT_SUCCESS
  NOT_AVAILABLE
}
